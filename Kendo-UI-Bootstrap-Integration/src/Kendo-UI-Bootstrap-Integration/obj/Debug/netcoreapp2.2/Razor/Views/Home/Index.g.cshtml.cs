#pragma checksum "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5a5235a21e24c11113adecfb4b59ece4f2ebe17f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\_ViewImports.cshtml"
using mvc_core;

#line default
#line hidden
#line 2 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5a5235a21e24c11113adecfb4b59ece4f2ebe17f", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3859582af6d690667636e3894b5db63e3ee92e4d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/avatar.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("ra-avatar img-responsive"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(76, 584, true);
            WriteLiteral(@"

<div id=""example"" class=""container"">
    <section class=""well"">
        <h2 class=""ra-well-title"">What is this page?</h2>

        <p>This page shows how to use Kendo UI alongside Twitter Bootstrap.</p>

        <p>The grid layout and responsive CSS is provided by Bootstrap, and widgets are provided by Kendo UI.</p>

        <p>Resize the page or customize it using the pickers above to see its responsive features.</p>

        <p>The source for this demo is <a href=""https://github.com/telerik/core-bootstrap-demo"">available on GitHub</a></p>
    </section>

    ");
            EndContext();
            BeginContext(662, 532, false);
#line 16 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Menu()
        .Name("menu")
        .Items(children =>
            {
                children.Add().Text("Profile").Url("#profile");
                children.Add().Text("Schedule").Url("#schedule");
                children.Add().Text("Orders").Url("#orders");
                children.Add().Text("Gallery").Url("#gallery");
                children.Add().Text("FAQ").Url("#faq");
                children.Add().Text("Kendo UI demos").Url("https://demos.telerik.com/kendo-ui");
            }
        )
    );

#line default
#line hidden
            EndContext();
            BeginContext(1195, 283, true);
            WriteLiteral(@"
    <div class=""row clearfix"">
        <div class=""col-lg-4"">
            <section id=""profile"" class=""well"">
                <h2 class=""ra-well-title"">Profile</h2>
                <div class=""row"">
                    <div class=""col-lg-5 col-sm-2"">
                        ");
            EndContext();
            BeginContext(1478, 66, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5a5235a21e24c11113adecfb4b59ece4f2ebe17f5799", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1544, 442, true);
            WriteLiteral(@"
                    </div>

                    <div class=""col-lg-7 col-sm-2"">
                        <span class=""ra-first-name"">Jonathan</span>
                        <span class=""ra-last-name"">Dodsworth</span>
                        <div class=""ra-position"">Inside Sales Coordinator</div>
                    </div>
                </div>
            </section>
        </div>

        <div class=""col-lg-8"">
            ");
            EndContext();
            BeginContext(1988, 13836, false);
#line 48 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
        Write(Html.Kendo().TabStrip()
                .Name("tabstrip")
                .Items(tabstrip =>
                    {
                        tabstrip.Add().Text("<span class='km-icon revenue'></span><span class='hidden-xs'>Revenue</span>")
                                .Encoded(false)
                                .Selected(true)
                                .Content(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(2377, 2, true);
    WriteLiteral("\r\n");
    EndContext();
    BeginContext(2379, 2449, false);
#line 56 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.RevenueViewModel>()
                                            .Name("revenue")
                                            .DataSource(ds => ds.Read(read => read.Action("Revenue", "Home")))
                                            .Transitions(false)
                                            .Theme("bootstrap")
                                            .ChartArea(chart => chart.Margin(10).Background("transparent"))
                                            .Legend(l => l.Visible(false))
                                            .SeriesDefaults(s => s
                                                .Column()
                                                .Stack(true))
                                            .CategoryAxis(a => a
                                                .Line(l => l.Visible(false))
                                                .MajorGridLines(m => m.Visible(false))
                                                .Labels(l => l.Visible(false))
                                                .Categories(m => m.Date))
                                            .Series(series =>
                                            {
                                                series.Column(model => model.Canterbury).Name("Canterbury");
                                                series.Column(model => model.Manchester).Name("Manchester");
                                                series.Column(model => model.Rochester).Name("Rochester");
                                            })
                                            .ValueAxis(v => v
                                                .Numeric()
                                                .Labels(l => l
                                                    .Step(2)
                                                    .Template("$#= value #")
                                                )
                                                .PlotBands(bands => bands
                                                    .Add().From(30000).To(50000).Color("#a7c9e6").Opacity(0.3)
                                                ))
                                           .Tooltip(t => t.Visible(true).Template("#= series.name # <br /> #= category #: $#= value #"))
                                );

#line default
#line hidden
    EndContext();
    BeginContext(4831, 34, true);
    WriteLiteral("\r\n                                ");
    EndContext();
    PopWriter();
}
));
                        tabstrip.Add().Text("<span class='km-icon spd'></span><span class='hidden-xs'>Sales / day</span>")
                                .Encoded(false)
                                .Content(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(5097, 2, true);
    WriteLiteral("\r\n");
    EndContext();
    BeginContext(5099, 1495, false);
#line 92 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.SalesPerDayViewModel>()
                                            .Name("sales-per-day")
                                            .DataSource(ds => ds.Read(read => read.Action("SalesPerDay", "Home")))
                                            .Transitions(false)
                                            .Theme("bootstrap")
                                            .ChartArea(chart => chart.Margin(10).Background("transparent"))
                                            .Legend(l => l.Visible(false))
                                            .SeriesDefaults(s => s.VerticalBullet())
                                            .CategoryAxis(a => a.Categories(m => m.Date)
                                                .Labels(l => l.Visible(false))
                                                .MajorGridLines(m => m.Visible(false)))
                                            .Series(s => s.VerticalBullet(m => m.Value, m => m.Target))
                                            .Tooltip(t => t.Visible(false))
                                            .ValueAxis(v => v.Date().Labels(l => l.Step(2)).PlotBands(bands =>
                                            {
                                                bands.Add().From(10000).To(20000).Color("#ff0000").Opacity(0.05);
                                            }))
                                );

#line default
#line hidden
    EndContext();
    BeginContext(6597, 34, true);
    WriteLiteral("\r\n                                ");
    EndContext();
    PopWriter();
}
));
                        tabstrip.Add().Text("<span class='km-icon spr'></span><span class='hidden-xs'>Sales / region</span>")
                                .Encoded(false)
                                .Content(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(6866, 2, true);
    WriteLiteral("\r\n");
    EndContext();
    BeginContext(6868, 2072, false);
#line 114 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.SalesPerRegionViewModel>()
                                            .Name("sales-per-region")
                                            .DataSource(ds => ds.Read(read => read.Action("SalesPerRegion", "Home")))
                                            .Transitions(false)
                                            .Theme("bootstrap")
                                            .Legend(l => l.Visible(false))
                                            .ChartArea(c => c.Margin(10).Background("transparent"))
                                            .SeriesDefaults(s => s
                                                .Area()
                                                .Line(l => l.Style(ChartAreaStyle.Smooth))
                                                .Stack(true))
                                            .CategoryAxis(a => a
                                                .Categories(m => m.Date)
                                                .Line(l => l.Visible(false))
                                                .Labels(l => l.Visible(false))
                                                .MajorGridLines(l => l.Visible(false))
                                                )
                                           .Tooltip(t => t.Visible(false).Template("#= series.name # <br /> #= category #: #= value #"))
                                           .Series(series =>
                                           {
                                               series.Area(model => model.Canterbury).Name("Canterbury");
                                               series.Area(model => model.Manchester).Name("Manchester");
                                               series.Area(model => model.Rochester).Name("Rochester");
                                           })
                                            .ValueAxis(v => v.Numeric().Labels(l => l.Step(2)))
                                );

#line default
#line hidden
    EndContext();
    BeginContext(8943, 34, true);
    WriteLiteral("\r\n                                ");
    EndContext();
    PopWriter();
}
));
                        tabstrip.Add().Text("<span class='km-icon share'></span><span class='hidden-xs'>Market share</span>")
                                .Encoded(false)
                                .Content(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(9212, 2, true);
    WriteLiteral("\r\n");
    EndContext();
    BeginContext(9214, 1633, false);
#line 144 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.DonutChartViewModel>()
                                                .HtmlAttributes(new { @class = "market-donut" })
                                                .Name("market-alice-mutton")
                                                .DataSource(ds => ds.Read(read => read.Action("AliceMutton", "Home")).Group(g => g.Add(d => d.Series)))
                                                .Transitions(false)
                                                .Theme("bootstrap")
                                                .Title(t => t
                                                    .Text("Alice Mutton")
                                                    .Position(ChartTitlePosition.Bottom)
                                                )
                                                .Legend(l => l.Visible(false))
                                                .ChartArea(c => c
                                                    .Background("transparent"))
                                                .Series(series =>
                                                {
                                                    series.Donut(d => d.Value, d => d.Category);
                                                })
                                                .Tooltip(t => t
                                                    .Visible(true)
                                                    .Template("#= category # (#= series.name #): #= value #%"))
                                );

#line default
#line hidden
    EndContext();
    BeginContext(10850, 4, true);
    WriteLiteral("\r\n\r\n");
    EndContext();
    BeginContext(10854, 1620, false);
#line 166 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.DonutChartViewModel>()
                                                .HtmlAttributes(new { @class = "market-donut" })
                                                .Name("market-gravad")
                                                .DataSource(ds => ds.Read(read => read.Action("Gravad", "Home")).Group(g => g.Add(d => d.Series)))
                                                .Transitions(false)
                                                .Theme("bootstrap")
                                                .Title(t => t
                                                    .Text("Gravad lax")
                                                    .Position(ChartTitlePosition.Bottom)
                                                )
                                                .Legend(l => l.Visible(false))
                                                .ChartArea(c => c
                                                    .Background("transparent"))
                                                .Series(series =>
                                                {
                                                    series.Donut(d => d.Value, d => d.Category);
                                                })
                                                .Tooltip(t => t
                                                    .Visible(true)
                                                    .Template("#= category # (#= series.name #): #= value #%"))
                                );

#line default
#line hidden
    EndContext();
    BeginContext(12477, 4, true);
    WriteLiteral("\r\n\r\n");
    EndContext();
    BeginContext(12481, 1686, false);
#line 188 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.DonutChartViewModel>()
                                                .HtmlAttributes(new { @class = "market-donut" })
                                                .Name("market-inlagd")
                                                .DataSource(ds => ds.Read(read => read.Action("Inlagd", "Home")).Group(g => g.Add(d => d.Series)))
                                                .Transitions(false)
                                                .Theme("bootstrap")
                                                .Title(t => t
                                                    .Text("Inlagd Sill")
                                                    .Position(ChartTitlePosition.Bottom)
                                                )
                                                .Legend(l => l.Visible(false))
                                                .ChartArea(c => c
                                                    .Margin(15)
                                                    .Background("transparent"))
                                                .Series(series =>
                                                {
                                                    series.Donut(d => d.Value, d => d.Category);
                                                })
                                                .Tooltip(t => t
                                                    .Visible(true)
                                                    .Template("#= category # (#= series.name #): #= value #%"))
                                );

#line default
#line hidden
    EndContext();
    BeginContext(14170, 4, true);
    WriteLiteral("\r\n\r\n");
    EndContext();
    BeginContext(14174, 1625, false);
#line 211 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.DonutChartViewModel>()
                                                .HtmlAttributes(new { @class = "market-donut" })
                                                .Name("market-spageslid")
                                                .DataSource(ds => ds.Read(read => read.Action("Spegesild", "Home")).Group(g => g.Add(d => d.Series)))
                                                .Transitions(false)
                                                .Theme("bootstrap")
                                                .Title(t => t
                                                    .Text("Spageslid")
                                                    .Position(ChartTitlePosition.Bottom)
                                                )
                                                .Legend(l => l.Visible(false))
                                                .ChartArea(c => c
                                                    .Background("transparent"))
                                                .Series(series =>
                                                {
                                                    series.Donut(d => d.Value, d => d.Category);
                                                })
                                                .Tooltip(t => t
                                                    .Visible(true)
                                                    .Template("#= category # (#= series.name #): #= value #%"))
                                );

#line default
#line hidden
    EndContext();
    BeginContext(15802, 34, true);
    WriteLiteral("\r\n                                ");
    EndContext();
    PopWriter();
}
));
                    }
                )
            );

#line default
#line hidden
            EndContext();
            BeginContext(15902, 669, true);
            WriteLiteral(@"

        </div>
    </div>

    <section class=""well"">
        <h2 class=""ra-well-title"">Profile Setup</h2>
        <div class=""form-horizontal form-widgets col-sm-6"">
            <div class=""form-group"">
                <label class=""control-label col-sm-4"" for=""name"">Name</label>
                <div class=""col-sm-8 col-md-6"">
                    <input id=""name"" value=""Johnatan Dodsworth"" class=""k-textbox"" />
                </div>
            </div>

            <div class=""form-group"">
                <label class=""control-label col-sm-4"" for=""birthday"">Birthday</label>
                <div class=""col-sm-8 col-md-6"">
                    ");
            EndContext();
            BeginContext(16573, 58, false);
#line 253 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
                Write(Html.Kendo().DatePicker().Name("date").Value("10/09/1979"));

#line default
#line hidden
            EndContext();
            BeginContext(16632, 238, true);
            WriteLiteral("\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-sm-4\" for=\"gender\">Gender</label>\r\n                <div class=\"col-sm-8 col-md-6\">\r\n                    ");
            EndContext();
            BeginContext(16872, 699, false);
#line 260 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
                Write(Html.Kendo().DropDownList()
                        .Name("gender")
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .Value("Male")
                        .BindTo(new List<SelectListItem>() {
                              new SelectListItem() {
                                  Text = "Male",
                                  Value = "Male"
                              },
                              new SelectListItem() {
                                  Text = "Female",
                                  Value = "Female"
                              }
                          })
                    );

#line default
#line hidden
            EndContext();
            BeginContext(17572, 242, true);
            WriteLiteral("\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-sm-4\" for=\"language\">Language</label>\r\n                <div class=\"col-sm-8 col-md-6\">\r\n                    ");
            EndContext();
            BeginContext(17816, 710, false);
#line 282 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
                Write(Html.Kendo().DropDownList()
                        .Name("language")
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .Value("English")
                        .BindTo(new List<SelectListItem>() {
                              new SelectListItem() {
                                  Text = "English",
                                  Value = "English"
                              },
                              new SelectListItem() {
                                  Text = "German",
                                  Value = "German"
                              }
                          })
                    );

#line default
#line hidden
            EndContext();
            BeginContext(18527, 633, true);
            WriteLiteral(@"
                </div>
            </div>
        </div>

        <div class=""form-horizontal form-widgets col-sm-6"">
            <div class=""form-group"">
                <label class=""control-label col-sm-4"" for=""occupation"">Occupation</label>
                <div class=""col-sm-8 col-md-6"">
                    <input id=""occupation"" placeholder=""e.g. Developer"" class=""k-textbox"" />
                </div>
            </div>

            <div class=""form-group"">
                <label class=""control-label col-sm-4"" for=""skills"">Skills</label>
                <div class=""col-sm-8 col-md-6"">
                    ");
            EndContext();
            BeginContext(19162, 2257, false);
#line 313 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
                Write(Html.Kendo().MultiSelect()
                        .Name("skills")
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .Value(new string[] { "C#", "jQuery" })
                        .BindTo(new List<SelectListItem>() {
                              new SelectListItem() {
                                  Text = "C",
                                  Value = "C"
                              },
                              new SelectListItem() {
                                  Text = "C++",
                                  Value = "C++"
                              },
                              new SelectListItem() {
                                  Text = "C#",
                                  Value = "C#"
                              },
                              new SelectListItem() {
                                  Text = "JavaScript",
                                  Value = "JavaScript"
                              },
                              new SelectListItem() {
                                  Text = "jQuery",
                                  Value = "jQuery"
                              },
                              new SelectListItem() {
                                  Text = "Git",
                                  Value = "Git"
                              },
                              new SelectListItem() {
                                  Text = "Node.js",
                                  Value = "Node.js"
                              },
                              new SelectListItem() {
                                  Text = "Ruby",
                                  Value = "Ruby"
                              },
                              new SelectListItem() {
                                  Text = "Ruby on Rails",
                                  Value = "Ruby on Rails"
                              },
                              new SelectListItem() {
                                  Text = "Kendo UI",
                                  Value = "Kendo UI"
                              }
                          })
                    );

#line default
#line hidden
            EndContext();
            BeginContext(21420, 246, true);
            WriteLiteral("\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label class=\"control-label col-sm-4\" for=\"experience\">Experience</label>\r\n                <div class=\"col-sm-8 col-md-6\">\r\n                    ");
            EndContext();
            BeginContext(21668, 101, false);
#line 367 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
                Write(Html.Kendo().NumericTextBox()
                    .Name("experience")
                    .Value(4));

#line default
#line hidden
            EndContext();
            BeginContext(21770, 348, true);
            WriteLiteral(@"
                </div>
            </div>
        </div>

        <div class=""clearfix""></div>

        <div class=""form-horizontal form-widgets col-sm-12"">
            <div class=""form-group"">
                <label class=""control-label col-sm-2"" for=""bio"">Short bio</label>
                <div class=""col-sm-10"">
                    ");
            EndContext();
            BeginContext(22120, 33, false);
#line 380 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
                Write(Html.Kendo().Editor().Name("bio"));

#line default
#line hidden
            EndContext();
            BeginContext(22154, 276, true);
            WriteLiteral(@"
                </div>
            </div>
        </div>

        <div class=""buttons-wrap"">
            <button class=""k-button k-state-default"">Cancel</button>
            <button class=""k-button k-state-default"">Update</button>
        </div>
    </section>
    ");
            EndContext();
            BeginContext(22432, 1224, false);
#line 390 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Grid<Kendo_UI_Bootstrap_Integration.Orders.OrderViewModel>()
                    .Name("orders")
                    .HtmlAttributes(new { @class = "ra-section" })
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.OrderID).Width(70);
                        columns.Bound(p => p.ShipCountry).Title("Ship Country").Width("20%");
                        columns.Bound(p => p.ShipAddress).Title("Ship Address");
                    })
                    .Pageable(p => p.ButtonCount(4))
                    .Groupable(g => g.Enabled(true))
                    .Sortable(s => s.Enabled(true))
                    .Scrollable(s => s.Enabled(false))
                    .DataSource(dataSource => dataSource
                            .Custom()
                            .Type("odata")
                            .PageSize(10)
                            .ServerPaging(true)
                            .ServerSorting(true)
                            .ServerFiltering(true)
                            .Transport(t => t.Read(r => r.Url("https://demos.telerik.com/kendo-ui/service/Northwind.svc/Orders")))
                    )

    );

#line default
#line hidden
            EndContext();
            BeginContext(23657, 8, true);
            WriteLiteral("\r\n\r\n    ");
            EndContext();
            BeginContext(23667, 1669, false);
#line 415 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
Write(Html.Kendo().Scheduler<Kendo_UI_Bootstrap_Integration.Scheduler.TaskViewModel>()
    .Name("schedule")
    .Date(new DateTime(2013, 6, 13))
    .StartTime(new DateTime(2013, 6, 13, 7, 00, 00))
    .EndTime(new DateTime(2013, 6, 13, 20, 00, 00))
    .HtmlAttributes(new { @class = "ra-section" })
    .Views(views =>
    {
        views.DayView(dayView => dayView.Selected(true));
        views.WeekView();
        views.MonthView();
    })
    .Editable(false)
    .Timezone("Etc/UTC")
    .DataSource(dataSource => dataSource
        .Custom()
        .Transport(t => t
            .Read(r => r
                .Url("https://demos.telerik.com/kendo-ui/service/meetings")
                .DataType("jsonp"))
        )
        .Schema(schema => schema
            .Model(m =>
            {
                m.Id(f => f.TaskID);
                m.Field("title", typeof(string)).DefaultValue("No title").From("Title");
                m.Field("start", typeof(DateTime)).From("Start");
                m.Field("end", typeof(DateTime)).From("End");
                m.Field("description", typeof(string)).From("Description");
                m.Field("recurrenceID", typeof(int)).From("RecurrenceID");
                m.Field("recurrenceRule", typeof(string)).From("RecurrenceRule");
                m.Field("recurrenceException", typeof(string)).From("RecurrenceException");
                m.Field("isAllDay", typeof(bool)).From("IsAllDay");
                m.Field("startTimezone", typeof(string)).From("StartTimezone");
                m.Field("endTimezone", typeof(string)).From("EndTimezone");
            })
            )
    )
    );

#line default
#line hidden
            EndContext();
            BeginContext(25337, 282, true);
            WriteLiteral(@"

    <section id=""gallery"" class=""well"">
        <h2 class=""ra-well-title"">Latest photo uploads</h2>

        <script id=""listview-template"" type=""x-kendo-template"">
            <li class=""col-xs-6 col-md-4 col-lg-2"">
                <figure>
                    <img src='");
            EndContext();
            BeginContext(25620, 42, false);
#line 461 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
                         Write(Url.Content("~/assets/photos/#= Id #.jpg"));

#line default
#line hidden
            EndContext();
            BeginContext(25662, 359, true);
            WriteLiteral(@"' class=""img-responsive"" />  
                    <figcaption class=""hidden-xs"">
                        <h4>#: Title #</h4>
                        <p class=""hidden-sm"">
                            #: Description #
                        </p>
                    </figcaption>
                </figure>
            </li>
        </script>
        ");
            EndContext();
            BeginContext(26023, 3865, false);
#line 471 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
    Write(Html.Kendo().ListView<Kendo_UI_Bootstrap_Integration.ListViewModel>()
            .Name("listview")
            .HtmlAttributes(new { @class = "ra-well-overlay row" })
            .ClientTemplateId("listview-template")
            .TagName("div")
            .BindTo(new List<Kendo_UI_Bootstrap_Integration.ListViewModel>() {
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 1,
                                  Title = "Sunrise",
                                  Description = "And what a great July morning it was..."
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 2,
                                  Title = "Fisherman",
                                  Description = "Fishing on the north shore"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 3,
                                  Title = "Green Forest",
                                  Description = "Summer is everywhere"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 4,
                                  Title = "Cactus",
                                  Description = "A yellow one..."
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 5,
                                  Title = "Moss",
                                  Description = "Nice mossy green"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 6,
                                  Title = "Red Boat",
                                  Description = "In the middle of nowhere"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 7,
                                  Title = "Country Road",
                                  Description = "On my way home"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 8,
                                  Title = "Bloom",
                                  Description = "Cherry blossoms in full bloom"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 9,
                                  Title = "San Francisco",
                                  Description = "San Francisco by sunset"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 10,
                                  Title = "Peaks",
                                  Description = "Was a great holiday"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 11,
                                  Title = "Thunderstorm",
                                  Description = "Midnight storm on its way"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 12,
                                  Title = "Leafs",
                                  Description = "Autumn leafs on the patio"
                              }
                          })
        );

#line default
#line hidden
            EndContext();
            BeginContext(29889, 183, true);
            WriteLiteral("\r\n    </section>\r\n\r\n    <section id=\"faq\" class=\"well\">\r\n        <h2 class=\"ra-well-title\">\r\n            <abbr title=\"Frequently Asked Questions\">FAQ</abbr>\r\n        </h2>\r\n\r\n        ");
            EndContext();
            BeginContext(30074, 4757, false);
#line 546 "D:\work\core-bootstrap-demo2\Kendo-UI-Bootstrap-Integration\src\Kendo-UI-Bootstrap-Integration\Views\Home\Index.cshtml"
    Write(Html.Kendo().PanelBar()
            .Name("panelbar")
            .HtmlAttributes(new { @class = "ra-well-overlay" })
            .Items(panelbar =>
                    {
                        panelbar.Add().Text("What is Kendo UI")
                                .Selected(true)
                                .Content(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(30412, 1074, true);
    WriteLiteral(@"
                                <div>
                                    <p>Kendo UI is a HTML5, jQuery-based framework for building modern HTML apps. Kendo UI combines the best of emerging HTML5, CSS3, and JavaScript technologies with robust, cross-browser techniques to deliver a framework that is both powerfully rich and broadly compatible with older browsers.</p>
                                    <p>Kendo UI combines everything that a developer needs to build a rich JavaScript app, eliminating the traditional challenge of manually researching and combining all of the needed plug-ins, frameworks, and libraries needed to build apps. Kendo UI includes rich UI controls for desktop, mobile and data vizualization, a JavaScript DataSource, fast Templates, cross-device Drag and Drop API, Globalization, Validation and MVVM framework extensions, and more.</p>
                                    <p><a href=""https://www.telerik.com/download/kendo-ui-complete"">Download Kendo UI</a> and experience the difference");
    WriteLiteral(" today</p>\r\n                                </div>");
    EndContext();
    PopWriter();
}
));
                        panelbar.Add().Text("Who should use Kendo UI?")
                                            .Encoded(false)
                                            .Content(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(31691, 1074, true);
    WriteLiteral(@"
                                <div>
                                    <p>Kendo UI is a HTML5, jQuery-based framework for building modern HTML apps. Kendo UI combines the best of emerging HTML5, CSS3, and JavaScript technologies with robust, cross-browser techniques to deliver a framework that is both powerfully rich and broadly compatible with older browsers.</p>
                                    <p>Kendo UI combines everything that a developer needs to build a rich JavaScript app, eliminating the traditional challenge of manually researching and combining all of the needed plug-ins, frameworks, and libraries needed to build apps. Kendo UI includes rich UI controls for desktop, mobile and data vizualization, a JavaScript DataSource, fast Templates, cross-device Drag and Drop API, Globalization, Validation and MVVM framework extensions, and more.</p>
                                    <p><a href=""https://www.telerik.com/download/kendo-ui-complete"">Download Kendo UI</a> and experience the difference");
    WriteLiteral(" today</p>\r\n                                </div>");
    EndContext();
    PopWriter();
}
));
                        panelbar.Add().Text("What are Kendo UI widgets?")
                                            .Encoded(false)
                                            .Content(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(32972, 1085, true);
    WriteLiteral(@"
                                <div>
                                    <p>Kendo UI widgets are part of the Kendo UI Framework. Kendo UI widgets are grouped into three collections:</p>
                                    <ul>
                                        <li>Kendo UI Web for touch-enabled desktop development</li>
                                        <li>Kendo UI DataViz for desktop and mobile data vizualizations</li>
                                        <li>Kendo UI Mobile for mobile app development, including PhoneGap deployment</li>
                                    </ul>
                                    <p>
                                        All widgets complement the tooling you need for modern HTML5 and JavaScript development.<br />
                                        <br />
                                        The Kendo UI Framework provides more than UI, and in the future Kendo UI will offer additional tools to modern HTML developers.
                   ");
    WriteLiteral("                 </p>\r\n                                </div>");
    EndContext();
    PopWriter();
}
));
                        panelbar.Add().Text("How do you use Kendo UI?")
                                            .Encoded(false)
                                            .Content(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    BeginContext(34262, 564, true);
    WriteLiteral(@"
                                <div>
                                    <p>Kendo UI is a pure JavaScript framework, so using Kendo UI is as simple as referencing JavaScript and CSS resources on your page. Once Kendo UI is configured on your page, the rich API gives you everything you need to initialize and configure an application.</p>
                                    <p>To learn more about using and installing Kendo UI, visit the Kendo UI&nbsp;<a href=""https://demos.telerik.com/kendo-ui"">online demos</a>.</p>
                                </div>");
    EndContext();
    PopWriter();
}
));
                    }
                )
        );

#line default
#line hidden
            EndContext();
            BeginContext(34888, 139, true);
            WriteLiteral("\r\n    </section>\r\n    <footer>Copyright &copy; 2013 <a href=\"https://telerik.com/\">Telerik Inc</a>. All rights reserved.</footer>\r\n</div>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
